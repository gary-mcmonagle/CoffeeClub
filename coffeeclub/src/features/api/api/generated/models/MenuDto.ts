/* tslint:disable */
/* eslint-disable */
/**
 * CoffeeClub.Core.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CoffeeBeanMenuDto } from './CoffeeBeanMenuDto';
import {
    CoffeeBeanMenuDtoFromJSON,
    CoffeeBeanMenuDtoFromJSONTyped,
    CoffeeBeanMenuDtoToJSON,
} from './CoffeeBeanMenuDto';
import type { MenuDrinkDto } from './MenuDrinkDto';
import {
    MenuDrinkDtoFromJSON,
    MenuDrinkDtoFromJSONTyped,
    MenuDrinkDtoToJSON,
} from './MenuDrinkDto';
import type { MilkType } from './MilkType';
import {
    MilkTypeFromJSON,
    MilkTypeFromJSONTyped,
    MilkTypeToJSON,
} from './MilkType';

/**
 * 
 * @export
 * @interface MenuDto
 */
export interface MenuDto {
    /**
     * 
     * @type {Array<MenuDrinkDto>}
     * @memberof MenuDto
     */
    drinks: Array<MenuDrinkDto>;
    /**
     * 
     * @type {Array<CoffeeBeanMenuDto>}
     * @memberof MenuDto
     */
    coffeeBeans: Array<CoffeeBeanMenuDto>;
    /**
     * 
     * @type {Array<MilkType>}
     * @memberof MenuDto
     */
    milks: Array<MilkType>;
}

/**
 * Check if a given object implements the MenuDto interface.
 */
export function instanceOfMenuDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "drinks" in value;
    isInstance = isInstance && "coffeeBeans" in value;
    isInstance = isInstance && "milks" in value;

    return isInstance;
}

export function MenuDtoFromJSON(json: any): MenuDto {
    return MenuDtoFromJSONTyped(json, false);
}

export function MenuDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MenuDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'drinks': ((json['drinks'] as Array<any>).map(MenuDrinkDtoFromJSON)),
        'coffeeBeans': ((json['coffeeBeans'] as Array<any>).map(CoffeeBeanMenuDtoFromJSON)),
        'milks': ((json['milks'] as Array<any>).map(MilkTypeFromJSON)),
    };
}

export function MenuDtoToJSON(value?: MenuDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'drinks': ((value.drinks as Array<any>).map(MenuDrinkDtoToJSON)),
        'coffeeBeans': ((value.coffeeBeans as Array<any>).map(CoffeeBeanMenuDtoToJSON)),
        'milks': ((value.milks as Array<any>).map(MilkTypeToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * CoffeeClub.Core.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CoffeeBean } from './CoffeeBean';
import {
    CoffeeBeanFromJSON,
    CoffeeBeanFromJSONTyped,
    CoffeeBeanToJSON,
} from './CoffeeBean';
import type { Drink } from './Drink';
import {
    DrinkFromJSON,
    DrinkFromJSONTyped,
    DrinkToJSON,
} from './Drink';
import type { MilkType } from './MilkType';
import {
    MilkTypeFromJSON,
    MilkTypeFromJSONTyped,
    MilkTypeToJSON,
} from './MilkType';

/**
 * 
 * @export
 * @interface DrinkOrderDto
 */
export interface DrinkOrderDto {
    /**
     * 
     * @type {CoffeeBean}
     * @memberof DrinkOrderDto
     */
    coffeeBean: CoffeeBean;
    /**
     * 
     * @type {Drink}
     * @memberof DrinkOrderDto
     */
    drink: Drink;
    /**
     * 
     * @type {MilkType}
     * @memberof DrinkOrderDto
     */
    milkType?: MilkType;
}

/**
 * Check if a given object implements the DrinkOrderDto interface.
 */
export function instanceOfDrinkOrderDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "coffeeBean" in value;
    isInstance = isInstance && "drink" in value;

    return isInstance;
}

export function DrinkOrderDtoFromJSON(json: any): DrinkOrderDto {
    return DrinkOrderDtoFromJSONTyped(json, false);
}

export function DrinkOrderDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DrinkOrderDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'coffeeBean': CoffeeBeanFromJSON(json['coffeeBean']),
        'drink': DrinkFromJSON(json['drink']),
        'milkType': !exists(json, 'milkType') ? undefined : MilkTypeFromJSON(json['milkType']),
    };
}

export function DrinkOrderDtoToJSON(value?: DrinkOrderDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'coffeeBean': CoffeeBeanToJSON(value.coffeeBean),
        'drink': DrinkToJSON(value.drink),
        'milkType': MilkTypeToJSON(value.milkType),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Document on Azure Functions
 * This is the OpenAPI Document on Azure Functions
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MenuDrinkDto
 */
export interface MenuDrinkDto {
    /**
     * 
     * @type {string}
     * @memberof MenuDrinkDto
     */
    name: MenuDrinkDtoNameEnum;
    /**
     * 
     * @type {boolean}
     * @memberof MenuDrinkDto
     */
    canBeIced: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MenuDrinkDto
     */
    requiresMilk: boolean;
}


/**
 * @export
 */
export const MenuDrinkDtoNameEnum = {
    Filter: 'Filter',
    Espresso: 'Espresso',
    Cappuccino: 'Cappuccino',
    Latte: 'Latte',
    IcedLatte: 'IcedLatte',
    IcedCappuccino: 'IcedCappuccino'
} as const;
export type MenuDrinkDtoNameEnum = typeof MenuDrinkDtoNameEnum[keyof typeof MenuDrinkDtoNameEnum];


/**
 * Check if a given object implements the MenuDrinkDto interface.
 */
export function instanceOfMenuDrinkDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "canBeIced" in value;
    isInstance = isInstance && "requiresMilk" in value;

    return isInstance;
}

export function MenuDrinkDtoFromJSON(json: any): MenuDrinkDto {
    return MenuDrinkDtoFromJSONTyped(json, false);
}

export function MenuDrinkDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MenuDrinkDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'canBeIced': json['canBeIced'],
        'requiresMilk': json['requiresMilk'],
    };
}

export function MenuDrinkDtoToJSON(value?: MenuDrinkDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'canBeIced': value.canBeIced,
        'requiresMilk': value.requiresMilk,
    };
}

